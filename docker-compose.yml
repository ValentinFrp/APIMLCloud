version: "3.8"

services:
  housing-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: housing-price-api
    ports:
      - "8000:8000"
    environment:
      - ENV=development
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - ./src:/app/src:ro
      - ./models:/app/models:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - housing-network

  redis:
    image: redis:7-alpine
    container_name: housing-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - housing-network
    profiles:
      - production

  prometheus:
    image: prom/prometheus:latest
    container_name: housing-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    restart: unless-stopped
    networks:
      - housing-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: housing-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    restart: unless-stopped
    networks:
      - housing-network
    profiles:
      - monitoring
    depends_on:
      - prometheus

  api-tests:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: housing-tests
    command: ["python", "-m", "pytest", "tests/", "-v", "--tb=short"]
    environment:
      - ENV=test
      - API_URL=http://housing-api:8000
    volumes:
      - ./tests:/app/tests:ro
      - ./src:/app/src:ro
      - ./models:/app/models:ro
    depends_on:
      housing-api:
        condition: service_healthy
    networks:
      - housing-network
    profiles:
      - test

networks:
  housing-network:
    driver: bridge
    name: housing-network

volumes:
  redis-data:
    name: housing-redis-data
  prometheus-data:
    name: housing-prometheus-data
  grafana-data:
    name: housing-grafana-data
